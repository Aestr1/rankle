
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Users can read their own data and update their own profiles.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }
    
    // Rules for the 'groups' collection
    match /groups/{groupId} {
      // Anyone authenticated can create a group.
      allow create: if request.auth.uid != null;
      
      // Users can read a group's details if they are a member.
      allow read: if request.auth.uid in resource.data.memberUids;

      // Users can update (join) a group if they are authenticated.
      // More specific logic (e.g., creator can't leave) is handled in server-side flows.
      allow update: if request.auth.uid != null;
      
      // Only the creator can delete the group.
      allow delete: if request.auth.uid == resource.data.creatorId;
    }
    
    // Gameplay can be created by any authenticated user.
    match /gameplays/{gameplayId} {
        allow create: if request.auth.uid != null;
        // Reading specific gameplay documents can be restricted further if needed.
        allow read: if request.auth.uid == resource.data.userId;
    }
    
    // Anyone can submit feedback.
    match /feedback/{feedbackId} {
        allow create: if true;
    }
  }
}
