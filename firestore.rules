
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read/write their own data, but some public fields are readable by anyone.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
      allow delete: if false; // Users shouldn't delete their own accounts from the client.
    }

    // Gameplays can be created by authenticated users and read by anyone for leaderboards.
    match /gameplays/{gameplayId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if false; // Do not allow editing/deleting scores from the client.
    }
    
    // Groups are private and can only be read/updated by their members.
    match /groups/{groupId} {
      // Only members of the group can read the group document.
      allow read: if request.auth != null && resource.data.memberUids.hasAny([request.auth.uid]);

      // Updates (like leaving a group) are handled by server-side flows.
      // We deny direct client updates for safety. Server flows bypass these rules.
      allow update, delete: if false; 
      
      // Creating a group is handled by a server-side flow.
      allow create: if false;
    }

    // Feedback can be submitted by anyone, but not read.
    match /feedback/{feedbackId} {
      allow read, update, delete: if false;
      allow create: if true; // Allow anonymous or authenticated feedback submission.
    }
  }
}
